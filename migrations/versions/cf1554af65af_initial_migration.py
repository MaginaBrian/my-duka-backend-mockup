"""initial migration

Revision ID: cf1554af65af
Revises: 
Create Date: 2025-07-29 15:00:09.152475

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = 'cf1554af65af'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('admins', schema=None) as batch_op:
        # batch_op.alter_column('id', ...)
        batch_op.alter_column('username',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=80),
               existing_nullable=False)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=120),
               existing_nullable=False)
        batch_op.alter_column('password_hash',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=128),
               existing_nullable=False)
        batch_op.drop_constraint(batch_op.f('admins_merchant_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'merchants', ['merchant_id'], ['id'])

    with op.batch_alter_table('clerks', schema=None) as batch_op:
        batch_op.add_column(sa.Column('username', sa.String(length=80), nullable=False))
        # batch_op.alter_column('id', ...)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=120),
               existing_nullable=False)
        batch_op.alter_column('password_hash',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=128),
               existing_nullable=False)
        batch_op.create_unique_constraint(None, ['username'])

    with op.batch_alter_table('inventory_records', schema=None) as batch_op:
        batch_op.add_column(sa.Column('clerk_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('quantity_received', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('items_in_stock', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('items_spoilt', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('payment_status', sa.Boolean(), nullable=False))
        batch_op.add_column(sa.Column('buying_price_at_record', sa.Float(), nullable=False))
        batch_op.add_column(sa.Column('selling_price_at_record', sa.Float(), nullable=False))
        batch_op.add_column(sa.Column('date_recorded', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        # batch_op.alter_column('id', ...)
        batch_op.create_foreign_key(None, 'clerks', ['clerk_id'], ['id'], ondelete='SET NULL')
        batch_op.drop_column('quantity')
        batch_op.drop_column('last_updated')

    with op.batch_alter_table('merchants', schema=None) as batch_op:
        batch_op.add_column(sa.Column('username', sa.String(length=80), nullable=False))
        batch_op.add_column(sa.Column('password_hash', sa.String(length=128), nullable=False))
        batch_op.add_column(sa.Column('is_superuser', sa.Boolean(), nullable=False))
        # batch_op.alter_column('id', ...)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=120),
               existing_nullable=False)
        batch_op.create_unique_constraint(None, ['username'])
        batch_op.drop_column('name')

    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.add_column(sa.Column('buying_price', sa.Float(), nullable=False))
        batch_op.add_column(sa.Column('selling_price', sa.Float(), nullable=False))
        batch_op.add_column(sa.Column('merchant_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), nullable=False))
        # batch_op.alter_column('id', ...)
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.create_unique_constraint(None, ['name'])
        batch_op.drop_constraint
